name: CICD pipeline with maven 

on:
  push:
    branches: [ "main" ]

jobs:
  compile:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile
      
  security-check:
    needs: compile
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Trivy installation
      run: |
        sudo apt-get install wget gnupg -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy
        
    - name: Trivy Fs Scan
      run: trivy fs --format table -o fs-report.json .  

    - name: Gitleaks installation
      run: sudo apt install gitleaks -y

    - name: Gitleaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json

  mvn_test: 
   needs: security-check
   runs-on: self-hosted
   
   steps:
     - uses: actions/checkout@v4
     - name: Set up JDK 17
       uses: actions/setup-java@v4
       with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
     - name: maven unit test cases
       run: mvn test

  build_and_test_using_sonarqube:
    needs: mvn_test
    runs-on: self-hosted
    
    steps:
       - uses: actions/checkout@v4
       - name: Set up JDK 17
         uses: actions/setup-java@v4
         with:
            java-version: '17'
            distribution: 'temurin'
            cache: maven
       - name: build project
         run: mvn package
         
       - uses: actions/checkout@v4
         with:
            # Disabling shallow clones is recommended for improving the relevancy of reporting
            fetch-depth: 0
       - name: SonarQube Scan
         uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
         env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

            # Check the Quality Gate status.
      # Check the Quality Gate status.
       - name: SonarQube Quality Gate check
         id: sonarqube-quality-gate-check
         uses: sonarsource/sonarqube-quality-gate-action@master
         with:
           pollingTimeoutSec: 600
         env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL

